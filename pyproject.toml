[project]
name = "korone"
version = "0.1.0"
description = "An all-in-one bot for Telegram"
authors = [{ name = "Hitalo" }]
dependencies = [
    "hydrogram @ git+https://github.com/hydrogram/hydrogram@dev",
    "tgcrypto>=1.2.5",
    "picologging>=0.9.3",
    "structlog>=24.1.0",
    "uvloop>=0.19.0",
    "rtoml>=0.10.0",
    "hairydogm>=0.2.7",
    "aiosqlite>=0.20.0",
    "emoji-country-flag>=1.3.2",
    "polib>=1.2.0",
    "bs4>=0.0.1",
    "lxml>=5.2.1",
    "meval>=2.5",
    "magic-filter>=1.0.12",
    "orjson>=3.10.1",
    "esprima>=4.0.1",
    "pillow>=10.3.0",
    "httpx[http2,socks,brotli]>=0.27.0",
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["pre-commit>=3.7.0", "ruff>=0.4.1"]

[project.optional-dependencies]
docs = [
    "Sphinx>=7.3.7",
    "furo>=2024.1.29",
    "sphinx-autobuild>=2024.4.16",
    "sphinx-copybutton>=0.5.2",
    "pygments>=2.17.2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 99
target-version = "py312"
preview = true

[tool.ruff.lint]
select = [
    "I",    # isort
    "E",    # pycodestyle
    "W",    # pycodestyle
    "UP",   # pyupgrade
    "F",    # pyflakes
    "PERF", # perflint
    "N",    # pep8-naming
    "RUF",  # ruff
    "FURB", # refurb
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
    "C4",   # flake8-comprehensions
    "PTH",  # flake8-use-pathlib
    "G",    # flake8-logging-format
    "TID",  # flake8-tidy-imports
]
ignore = ["RUF001", "RUF002", "RUF003"]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks, except the below
    "GL08",
    "SA01",
    "EX01",
]

[tool.rye.scripts]
clean-docs = { cmd = "rm -rf docs/build" }
build-docs = { cmd = "sphinx-build -b html docs/source docs/build" }
live-docs = { cmd = "sphinx-autobuild  docs/source docs/build --watch src" }
pybabel-extract = { cmd = "pybabel extract --keywords='__ _' --input-dirs=. -o locales/bot.pot" }
